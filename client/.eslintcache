[{"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\index.js":"1","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\reportWebVitals.js":"2","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\App.js":"3","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\assets\\css\\themes.js":"4","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\queries.js":"5","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\mutations.js":"6","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Scoreboard.js":"7","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Quote.js":"8","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\TopicButton\\index.js":"9","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Main.js":"10","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Topic.js":"11","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Author.js":"12","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Platform\\main.js":"13","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Platform\\specific.js":"14","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SearchResult.js":"15","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\NavBar\\index.js":"16","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Footer\\index.js":"17","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ErrorPage\\index.js":"18","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MainpageSearch\\index.js":"19","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorCards\\index.js":"20","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorButton\\index.js":"21","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorLink\\index.js":"22","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Results\\index.js":"23","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ResultsQuote\\index.js":"24","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\AuthorNav.js":"25","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\TopicNav.js":"26","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\QOTD\\index.js":"27","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomAuthors\\index.js":"28","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomQuotes\\index.js":"29","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomTopics\\index.js":"30","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreAuthor\\index.js":"31","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreTopic\\index.js":"32"},{"size":500,"mtime":1626532748920,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1626532748920,"results":"35","hashOfConfig":"34"},{"size":2951,"mtime":1636219164629,"results":"36","hashOfConfig":"34"},{"size":3197,"mtime":1636320672754,"results":"37","hashOfConfig":"34"},{"size":3130,"mtime":1636218949402,"results":"38","hashOfConfig":"34"},{"size":84,"mtime":1635797830588,"results":"39","hashOfConfig":"34"},{"size":1644,"mtime":1636057852943,"results":"40","hashOfConfig":"34"},{"size":4778,"mtime":1636404435213,"results":"41","hashOfConfig":"34"},{"size":853,"mtime":1636314968050,"results":"42","hashOfConfig":"34"},{"size":1195,"mtime":1636403830973,"results":"43","hashOfConfig":"34"},{"size":2083,"mtime":1636240262233,"results":"44","hashOfConfig":"34"},{"size":2657,"mtime":1636316036050,"results":"45","hashOfConfig":"34"},{"size":2878,"mtime":1635536487186,"results":"46","hashOfConfig":"34"},{"size":1737,"mtime":1635711316441,"results":"47","hashOfConfig":"34"},{"size":1179,"mtime":1636047374344,"results":"48","hashOfConfig":"34"},{"size":2460,"mtime":1636227576661,"results":"49","hashOfConfig":"34"},{"size":1571,"mtime":1636045063290,"results":"50","hashOfConfig":"34"},{"size":347,"mtime":1635539746659,"results":"51","hashOfConfig":"34"},{"size":1816,"mtime":1636223099492,"results":"52","hashOfConfig":"34"},{"size":1213,"mtime":1636221710356,"results":"53","hashOfConfig":"34"},{"size":834,"mtime":1636049067011,"results":"54","hashOfConfig":"34"},{"size":1707,"mtime":1635968378187,"results":"55","hashOfConfig":"34"},{"size":2108,"mtime":1636404054108,"results":"56","hashOfConfig":"34"},{"size":1982,"mtime":1636055709927,"results":"57","hashOfConfig":"34"},{"size":2354,"mtime":1636240196664,"results":"58","hashOfConfig":"34"},{"size":2385,"mtime":1636222977217,"results":"59","hashOfConfig":"34"},{"size":2226,"mtime":1636403937132,"results":"60","hashOfConfig":"34"},{"size":1396,"mtime":1636401774918,"results":"61","hashOfConfig":"34"},{"size":2454,"mtime":1636494233987,"results":"62","hashOfConfig":"34"},{"size":1382,"mtime":1636401781583,"results":"63","hashOfConfig":"34"},{"size":1370,"mtime":1636404766139,"results":"64","hashOfConfig":"34"},{"size":1364,"mtime":1636404760940,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"13k8eoc",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\index.js",[],["141","142"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\reportWebVitals.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\App.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\assets\\css\\themes.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\queries.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\mutations.js",[],["143","144"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Scoreboard.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Quote.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\TopicButton\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Main.js",["145"],"import React from \"react\";\r\nimport { Container, Card, Row, Col } from \"react-bootstrap\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport QOTD from \"../components/QOTD\";\r\nimport RandomAuthors from \"../components/RandomAuthors\";\r\nimport RandomTopics from \"../components/RandomTopics\";\r\nimport RandomQuotes from \"../components/RandomQuotes\";\r\n\r\nfunction Main() {\r\n    return (\r\n        <Container>\r\n            <MetaTags>\r\n                <title>1001 Nuggets</title>\r\n            </MetaTags>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <QOTD input={\"61843282cb06fa1d8462708e\"}/>\r\n                </Col>\r\n                <Col xs={12} lg={5} className=\"mb-3\">\r\n                    <RandomQuotes/>\r\n                </Col>\r\n                <Col xs={12} lg={7}>\r\n                    <Row className=\"text-center\">\r\n                        <Col xs={6}>\r\n                            <RandomAuthors/>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <RandomTopics/>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Topic.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Author.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Platform\\main.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Platform\\specific.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SearchResult.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\NavBar\\index.js",["146","147","148","149"],"import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Navbar, Nav, Row, Col, Container, Button, Form } from \"react-bootstrap\";\r\n\r\nclass NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '', go: false };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) { \r\n        this.setState({value: event.target.value}); \r\n    }\r\n    \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.setState({go: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.go) {\r\n            this.setState({go: false});\r\n            return <Redirect to={`/search/${this.state.value}`}/>\r\n        }\r\n        else {        \r\n            return(\r\n                <Navbar bg=\"red\" variant=\"dark\" expand=\"md\" className=\"mb-3\">\r\n                    <Container>\r\n                        {/* <Link className=\"navbar-brand\" to={`/`}><strong>1001 Nuggets</strong></Link> */}\r\n                        <Link className=\"navbar-brand\" to={`/`}><img id=\"nav-icon\" className=\"me-3\" src=\"/assets/images/thumbnails/background-copy.png\"/></Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"text-center\">\r\n                            <Nav className=\"me-auto\">\r\n                                <span className=\"hoverable me-1\"><Link id=\"nav-home\" className=\"nav-link\" to={`/`}><strong>Home</strong></Link></span>\r\n                                <span className=\"hoverable me-1\"><Link id=\"nav-authors\" className=\"nav-link\" to={`/authors`}><strong>Authors</strong></Link></span>\r\n                                <span className=\"hoverable me-1\"><Link id=\"nav-topics\" className=\"nav-link\" to={`/topics`}><strong>Topics</strong></Link></span>\r\n                            </Nav>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <input type=\"text\" id=\"searchTerm\" placeholder=\"Search...\" className=\"me-2 my-2\" onChange={this.handleChange}></input>\r\n                                <input type=\"submit\" value=\"Submit\"></input>\r\n                            </Form>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ErrorPage\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MainpageSearch\\index.js",[],["150","151"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorCards\\index.js",["152"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { QUERY_AUTHOR_ALL } from \"../../utils/queries\";\r\n\r\nconst SpecificCard = (author) => {    \r\n    return (\r\n        <Col xs={6} md={4} lg={3} className=\"mb-3\">\r\n            <Card className=\"text-center text-white card-main\">\r\n                <Link to={`/author/${author.author._id}`} className=\"text-white btn btn-theme btn-block py-3\">\r\n                    <strong>{author.author.name}</strong>\r\n                </Link>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst AuthorCards = () => {\r\n    let {loading, data} = useQuery(QUERY_AUTHOR_ALL);\r\n    if(loading) return <p>Loading...</p>;\r\n\r\n    let authorList = [];\r\n    for(let index of data.authors){\r\n        authorList.push(index)\r\n    }\r\n    // console.log(authorList);\r\n\r\n    authorList = authorList.sort((a, b) => (b.quotes.length) - (a.quotes.length));\r\n\r\n    return (\r\n        <Row>\r\n            {authorList.map((index) => (\r\n                <SpecificCard author={index} key={index.name}/>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default AuthorCards;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorButton\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorLink\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Results\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ResultsQuote\\index.js",["153"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Container, Card, Col, Row } from \"react-bootstrap\";\r\n\r\nimport TopicButton from \"../TopicButton\"\r\nimport AuthorButton from \"../AuthorButton\"\r\n\r\nimport { QUERY_QUOTE_ALL } from '../../utils/queries';\r\n\r\nconst ResultsQuote = ({input}) => {\r\n    let quoteList, newList = [];\r\n\r\n    let {loading, data} = useQuery(QUERY_QUOTE_ALL);\r\n    quoteList = data;\r\n\r\n    input = input.toUpperCase();\r\n    // console.log(input);\r\n    \r\n    if(loading) return <p>Loading...</p>\r\n\r\n    for(let index of quoteList.quotes) {\r\n        if(index.quoteText.toUpperCase().indexOf(input) > -1) newList.push(index);\r\n    }\r\n\r\n    if(newList[0]) {\r\n        return (\r\n            <Container className=\"mb-2\">\r\n                <div>\r\n                    <h5>Results under quotes . . .</h5>\r\n                    <hr></hr>\r\n                    <Row className=\"text-center\">\r\n                        {newList.map((index) => (\r\n                            <Col xs={12} md={6} xl={4} className=\"mb-3\" key={index.name + index.quoteText}>\r\n                                <Card>\r\n                                    <Link to={`/quote/${index._id}`} className=\"text-black\">\r\n                                        <Card.Body><i>\"{index.quoteText}\"</i></Card.Body>\r\n                                    </Link>\r\n                                    <Card.Footer>\r\n                                        <AuthorButton key={index.author} type={\"button\"} name={index.author}></AuthorButton>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <h5>No results under quotes...</h5>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ResultsQuote;\r\n","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\AuthorNav.js",["154"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\n\r\nimport { QUERY_AUTHOR_ALL } from \"../utils/queries\";\r\n\r\nfunction Freethinkers () {\r\n    let { loading, data } = useQuery(QUERY_AUTHOR_ALL);\r\n\r\n    if(loading) return <span>Loading...</span>\r\n\r\n    let authorList = [];\r\n    for(let index of data.authors){\r\n        authorList.push(index);\r\n    }\r\n\r\n    authorList = authorList.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    const searchFunction = () => {\r\n        let input, filter, group, elements, body, textValue;\r\n        input = document.getElementById(\"myInput\");\r\n        filter = input.value.toUpperCase();\r\n        group = document.getElementById(\"myGroup\");\r\n        elements = group.getElementsByClassName(\"col-12\")\r\n\r\n        for(let i = 0; i < elements.length; ++i) {\r\n            body = elements[i].getElementsByTagName(\"a\")[0];\r\n            textValue = body.textContent || body.innerText;\r\n            if(textValue.toUpperCase().indexOf(filter) > -1) elements[i].style.display=\"\";\r\n            else elements[i].style.display=\"none\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <MetaTags>\r\n                <title>1001 Nuggets - Authors</title>\r\n            </MetaTags>\r\n            <Card>\r\n                <Card.Header><Link className=\"link-theme\" to={`/`}>Home</Link> {`>`} Authors</Card.Header>\r\n                <Card.Header className=\"text-center py-3\">\r\n                    <Card.Title>Authors</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <input type=\"text\" id=\"myInput\" onKeyUp={searchFunction} placeholder=\"Search for thought names...\" className=\"mb-3\"/>\r\n                    <Row id=\"myGroup\">\r\n                        {authorList.map((index) => (\r\n                            <Col xs={12} sm={6} md={4} lg={3} key={index.name} className=\"text-center mb-3\">\r\n                                <Link to={`/author/${index._id}`} className=\"link-theme\">{index.name}</Link>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Freethinkers;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\TopicNav.js",["155"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\r\n\r\nimport { QUERY_TOPIC_ALL } from \"../utils/queries\";\r\n\r\nfunction TopicNavigation () {\r\n    let { loading, data } = useQuery(QUERY_TOPIC_ALL);\r\n\r\n    if(loading) return <span>Loading...</span>\r\n\r\n    const topicList = data.topics;\r\n\r\n    let sortedList = []\r\n\r\n    for(let index of topicList) {\r\n        sortedList.push(index)\r\n    }\r\n\r\n    sortedList = sortedList.sort((a,b) => a.name.localeCompare(b.name));\r\n\r\n    const searchFunction = () => {\r\n        let input, filter, group, elements, body, textValue;\r\n        input = document.getElementById(\"myInput\");\r\n        filter = input.value.toUpperCase();\r\n        group = document.getElementById(\"myGroup\");\r\n        elements = group.getElementsByClassName(\"col-12\")\r\n\r\n        for(let i = 0; i < elements.length; ++i) {\r\n            body = elements[i].getElementsByTagName(\"a\")[0];\r\n            textValue = body.textContent || body.innerText;\r\n            if(textValue.toUpperCase().indexOf(filter) > -1) elements[i].style.display=\"\";\r\n            else elements[i].style.display=\"none\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <MetaTags>\r\n                <title>1001 Nuggets - Topics</title>\r\n            </MetaTags>\r\n            <Card>\r\n            <Card.Header><Link className=\"link-theme\" to={`/`}>Home</Link> {`>`} Topics</Card.Header>\r\n                <Card.Header className=\"text-center py-3\">\r\n                    <Card.Title>Topics</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <input type=\"text\" id=\"myInput\" onKeyUp={searchFunction} placeholder=\"Search for thought names...\" className=\"mb-3\"/>\r\n                    <Row id=\"myGroup\">\r\n                        {sortedList.map((index) => (\r\n                            <Col xs={12} sm={6} md={4} lg={3} key={index.name} className=\"text-center mb-3\">\r\n                                <Link to={`/topic/${index._id}`} className=\"link-theme\">{index.name}</Link>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TopicNavigation;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\QOTD\\index.js",["156"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { useQuery} from \"@apollo/client\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport { FaTwitter, FaFacebookF, FaReddit } from \"react-icons/fa\";\r\n\r\nimport TopicButton from \"../../components/TopicButton\";\r\nimport AuthorButton from \"../../components/AuthorButton\";\r\n\r\nimport { QUERY_QUOTE_ID } from \"../../utils/queries\";\r\n\r\nconst QOTD = ({input}) => {\r\n    const quoteId = input;\r\n    let { loading, data } = useQuery(QUERY_QUOTE_ID, {\r\n        variables: {quoteId: quoteId},\r\n    })\r\n\r\n    if(loading) {\r\n        return <div className=\"loadingPage\">Loading...</div>;\r\n    }\r\n\r\n    if(!data) return (<Redirect to={`/404error`}/>);\r\n\r\n    const quote = data.quote;\r\n\r\n    return (\r\n        <Card className=\"mb-3\">\r\n            <Card.Header className=\"text-center display-6\">Quote of the Day</Card.Header>\r\n            <Link to={`/quote/${input}`} id=\"quote-page\">\r\n                <Card.Body>\r\n                    <Card.Text className=\"display-6\"><span className=\"quote-body text-black\" id=\"main-quote\">\"{quote.quoteText}\"</span></Card.Text>\r\n                    <Card.Text><strong><AuthorButton type={\"link\"} name={quote.author}/></strong></Card.Text>\r\n                </Card.Body>\r\n                <Card.Body className=\"text-center\">\r\n                    <Link className=\"mx-2 share-button\" to={`https://twitter.com/intent/tweet?url=${window.location.href}`} id=\"share-twitter\"><FaTwitter/></Link>\r\n                    <Link className=\"mx-2 share-button\" to={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`} id=\"share-facebook\"><FaFacebookF/></Link>\r\n                    <Link className=\"mx-2 share-button\" to={``} id=\"share-reddit\"><FaReddit/></Link>\r\n                </Card.Body>\r\n            </Link>\r\n            {quote.topics.length !== 0 && \r\n                <Card.Footer className=\"text-center py-3\">\r\n                        {quote.topics.map((index) => (\r\n                            <span key={index} className=\"mx-1\"><TopicButton type={\"button\"} name={index}/></span>\r\n                        ))}\r\n                </Card.Footer>\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default QOTD;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomAuthors\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomQuotes\\index.js",["157","158"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport { Card, Button, Carousel, Row, Col } from \"react-bootstrap\";\r\n\r\nimport TopicButton from \"../TopicButton\";\r\nimport AuthorButton from \"../AuthorButton\";\r\n\r\nimport { QUERY_QUOTE_ALL } from \"../../utils/queries\";\r\n\r\nconst RandomAuthors = () => {\r\n    const { loading, data } = useQuery(QUERY_QUOTE_ALL);\r\n\r\n    if(loading) return <p>Loading...</p>\r\n\r\n    const quotes = data.quotes;\r\n    let randomQuotes = []\r\n\r\n    for(let i = 0; i < 20; ++i) {\r\n        randomQuotes.push(quotes[Math.floor(Math.random() * quotes.length)]);\r\n    }\r\n    \r\n    return(\r\n        <Carousel variant=\"dark\" indicators={false} controls={true} nextIcon={<Button variant={\"light\"}><strong>{`>`}</strong></Button>} prevIcon={<Button variant={\"light\"}><strong>{`<`}</strong></Button>}>\r\n            {randomQuotes.map((index) => (\r\n                <Carousel.Item key={\"Carousel\" + index._id}>\r\n                        <Card>\r\n                            <Card.Header className=\"text-center\">Random Quote</Card.Header>\r\n                            <Link to={`/quote/${index._id}`}>\r\n                                <Card.Body>\r\n                                    <Card.Text className=\"text-black\">\"{index.quoteText}\"</Card.Text>\r\n                                    <Card.Text><strong><AuthorButton type={\"link\"} name={index.author}/></strong></Card.Text>\r\n                                </Card.Body>\r\n                            </Link>\r\n                            {index.topics.length !== 0 &&\r\n                                <Card.Footer className=\"text-center\">\r\n                                    {index.topics.map((index2) => (\r\n                                        <span key={index2} className=\"mx-1\"><TopicButton type={\"button\"} name={index2}/></span>\r\n                                    ))}\r\n                                </Card.Footer>\r\n                            }\r\n                        </Card>\r\n                        {/* <Row className=\"mt-3\">\r\n                            <Col className=\"text-start\"><Button variant={\"theme\"} className=\"mx-2\">{`<`}</Button></Col>\r\n                            <Col className=\"text-end\"><Button variant={\"theme\"} className=\"mx-2\">{`>`}</Button></Col>\r\n                        </Row> */}\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default RandomAuthors;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomTopics\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreAuthor\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreTopic\\index.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":21,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"169","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":3,"column":28,"nodeType":"167","messageId":"168","endLine":3,"endColumn":31},{"ruleId":"165","severity":1,"message":"171","line":3,"column":44,"nodeType":"167","messageId":"168","endLine":3,"endColumn":50},{"ruleId":"172","severity":1,"message":"173","line":33,"column":65,"nodeType":"174","endLine":33,"endColumn":154},{"ruleId":"159","replacedBy":"175"},{"ruleId":"161","replacedBy":"176"},{"ruleId":"165","severity":1,"message":"171","line":5,"column":26,"nodeType":"167","messageId":"168","endLine":5,"endColumn":32},{"ruleId":"165","severity":1,"message":"177","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":19},{"ruleId":"165","severity":1,"message":"171","line":6,"column":31,"nodeType":"167","messageId":"168","endLine":6,"endColumn":37},{"ruleId":"165","severity":1,"message":"171","line":6,"column":31,"nodeType":"167","messageId":"168","endLine":6,"endColumn":37},{"ruleId":"165","severity":1,"message":"178","line":2,"column":26,"nodeType":"167","messageId":"168","endLine":2,"endColumn":35},{"ruleId":"165","severity":1,"message":"169","line":5,"column":34,"nodeType":"167","messageId":"168","endLine":5,"endColumn":37},{"ruleId":"165","severity":1,"message":"170","line":5,"column":39,"nodeType":"167","messageId":"168","endLine":5,"endColumn":42},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["179"],["180"],"'TopicButton' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]