[{"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\index.js":"1","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\App.js":"2","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\reportWebVitals.js":"3","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Main.js":"4","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Topic.js":"5","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\AuthorNav.js":"6","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Author.js":"7","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\TopicNav.js":"8","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Quote.js":"9","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SearchResult.js":"10","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\CollectionNav.js":"11","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Collection.js":"12","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\assets\\css\\themes.js":"13","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\NavBar\\index.js":"14","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Footer\\index.js":"15","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ErrorPage\\index.js":"16","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\auth.js":"17","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\queries.js":"18","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomAuthors\\index.js":"19","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomTopics\\index.js":"20","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomQuotes\\index.js":"21","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\QuoteCard\\index.js":"22","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\TopicButton\\index.js":"23","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorButton\\index.js":"24","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreAuthor\\index.js":"25","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\SimilarTopics\\index.js":"26","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Results\\index.js":"27","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ResultsQuote\\index.js":"28","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\CollectionButton\\index.js":"29","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SomePeople.js":"30","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\shuffle.js":"31"},{"size":500,"mtime":1626532748920,"results":"32","hashOfConfig":"33"},{"size":5133,"mtime":1682946633320,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1626532748920,"results":"35","hashOfConfig":"33"},{"size":424,"mtime":1679354141893,"results":"36","hashOfConfig":"33"},{"size":6067,"mtime":1682970165290,"results":"37","hashOfConfig":"33"},{"size":6911,"mtime":1679503181044,"results":"38","hashOfConfig":"33"},{"size":5497,"mtime":1680714164121,"results":"39","hashOfConfig":"33"},{"size":6989,"mtime":1682881033803,"results":"40","hashOfConfig":"33"},{"size":3053,"mtime":1680802334317,"results":"41","hashOfConfig":"33"},{"size":1192,"mtime":1679613795338,"results":"42","hashOfConfig":"33"},{"size":6990,"mtime":1679665150438,"results":"43","hashOfConfig":"33"},{"size":5632,"mtime":1680713313620,"results":"44","hashOfConfig":"33"},{"size":5313,"mtime":1682882141783,"results":"45","hashOfConfig":"33"},{"size":2233,"mtime":1682947282758,"results":"46","hashOfConfig":"33"},{"size":1929,"mtime":1680714132697,"results":"47","hashOfConfig":"33"},{"size":347,"mtime":1635539746659,"results":"48","hashOfConfig":"33"},{"size":1116,"mtime":1667335666790,"results":"49","hashOfConfig":"33"},{"size":6748,"mtime":1682888475510,"results":"50","hashOfConfig":"33"},{"size":1446,"mtime":1637174500615,"results":"51","hashOfConfig":"33"},{"size":1382,"mtime":1637170247746,"results":"52","hashOfConfig":"33"},{"size":1461,"mtime":1675302450153,"results":"53","hashOfConfig":"33"},{"size":3262,"mtime":1683043282945,"results":"54","hashOfConfig":"33"},{"size":855,"mtime":1682531973762,"results":"55","hashOfConfig":"33"},{"size":940,"mtime":1679873688885,"results":"56","hashOfConfig":"33"},{"size":2422,"mtime":1662946522216,"results":"57","hashOfConfig":"33"},{"size":811,"mtime":1675302450156,"results":"58","hashOfConfig":"33"},{"size":2111,"mtime":1662948482840,"results":"59","hashOfConfig":"33"},{"size":1329,"mtime":1675302450155,"results":"60","hashOfConfig":"33"},{"size":913,"mtime":1666306220492,"results":"61","hashOfConfig":"33"},{"size":5192,"mtime":1682947601456,"results":"62","hashOfConfig":"33"},{"size":353,"mtime":1682951836117,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"13k8eoc",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\index.js",[],["135","136"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\App.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\reportWebVitals.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Main.js",[],["137","138"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Topic.js",["139"],"import React from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { useQuery} from \"@apollo/client\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport QuoteCard from \"../components/QuoteCard\";\r\n\r\nimport { QUERY_TOPIC_REALID } from \"../utils/queries\";\r\nimport shuffle from \"../utils/shuffle\";\r\n\r\nfunction Topic () {\r\n    const { topicRealId } = useParams();\r\n    let {loading, data} = useQuery(QUERY_TOPIC_REALID, {\r\n        variables: {topicRealId: topicRealId},\r\n    });\r\n\r\n    if(!topicRealId || topicRealId === null || topicRealId === \"undefined\") return (<Redirect to={`/topics`}/>);\r\n\r\n    if(loading) return <p>Loading...</p>\r\n\r\n    if(!data) return (<Redirect to={`/404error`}/>);\r\n\r\n    const topic = data.topicR;\r\n    console.log(topic.quotes);\r\n\r\n    let indexList = [];\r\n\r\n    for(let i = 0; i < topic.quotes.length; ++i) {\r\n        indexList.push(i);\r\n    }\r\n\r\n    if(!indexList || indexList == []) return <p>Loading...</p>\r\n\r\n    indexList = shuffle(indexList);\r\n\r\n    let list1;\r\n    let list2;\r\n    let list3a;\r\n    let list3b;\r\n    if(topic.quotes) {\r\n        let result = [];\r\n        for(let n = 3; n > 0; --n) {\r\n            result.push(indexList.splice(0,Math.ceil(indexList.length / n)));\r\n        }\r\n        list1 = result[0];\r\n        list2 = result[2];\r\n\r\n        let middleIndex = Math.ceil(result[1].length/2);\r\n        list3a = result[1].splice(0,middleIndex);\r\n        list3b = result[1].splice(-middleIndex);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <MetaTags>\r\n                <title>1001 Nuggets - {topic.name}</title>\r\n            </MetaTags>\r\n            <Card>\r\n                <Card.Header>Home {`>`} <Link className=\"link-theme\" to={`/topics`}>Topics</Link> {`>`} {topic.name}</Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                         {/* First Quote Column */}\r\n                         <Col xs={12} md={6} lg={4}>\r\n                            {list1 && \r\n                                <Row>\r\n                                    {list1.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {\r\n                                list3a &&\r\n                                <Row className=\"d-xs-block d-lg-none\">\r\n                                    {list3a.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={\"false\" + topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col>\r\n\r\n                        {/* Middle Quote Column */}\r\n                        <Col lg={4} className=\"d-none d-lg-block\">\r\n                            {list3a && \r\n                                <Row>\r\n                                    {list3a.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {list3b && \r\n                                <Row>\r\n                                    {list3b.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col>\r\n                        \r\n                        {/* Last Quote Column */}\r\n                        <Col xs={12} md={6} lg={4}>\r\n                            {\r\n                                list3b &&\r\n                                <Row className=\"d-xs-block d-lg-none\">\r\n                                    {list3b.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={\"false\" + topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {list2 && \r\n                                <Row>\r\n                                    {list2.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={topic.quotes[index].quoteText}>\r\n                                            <QuoteCard quotes={topic.quotes} quoteIndex={index} indexOrder={list1.concat(list3a.concat(list3b.concat(list2)))}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Topic;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\AuthorNav.js",[],["140","141"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Author.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\TopicNav.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Quote.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SearchResult.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\CollectionNav.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\Collection.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\assets\\css\\themes.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\NavBar\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ErrorPage\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\auth.js",[],["142","143"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\queries.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomAuthors\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomTopics\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\RandomQuotes\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\QuoteCard\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\TopicButton\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\AuthorButton\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\MoreAuthor\\index.js",[],["144","145"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\SimilarTopics\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\Results\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\ResultsQuote\\index.js",[],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\components\\CollectionButton\\index.js",[],["146","147"],"C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\pages\\SomePeople.js",["148","149","150"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useQuery} from \"@apollo/client\";\r\nimport MetaTags from \"react-meta-tags\";\r\n\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport QuoteCard from \"../components/QuoteCard\";\r\n\r\nimport { QUERY_QUOTE_ALL } from \"../utils/queries\";\r\n\r\nfunction SomePeople () {\r\n    let {loading, data} = useQuery(QUERY_QUOTE_ALL);\r\n\r\n    if(loading) return <p>Loading...</p>\r\n\r\n    if(!data) return (<Redirect to={`/404error`}/>);\r\n\r\n    const quoteList = [...data.quotes];\r\n\r\n    // let list1 \r\n    // let list2\r\n    // let list3a\r\n    // let list3b\r\n    // if(quoteList) {\r\n    //     let result = [];\r\n    //     for(let i = 3; i > 0; --i) {\r\n    //         result.push(quoteList.splice(0, Math.ceil(quoteList.length / i)))\r\n    //     }\r\n    //     list1 = result[0];\r\n    //     list2 = result[2];\r\n        \r\n    //     let middleIndex = Math.ceil(result[1].length/2);\r\n    //     list3a = result[1].splice(0,middleIndex);\r\n    //     list3b = result[1].splice(-middleIndex);\r\n    // }\r\n\r\n    return (\r\n        <Container>\r\n            <MetaTags>\r\n                <title>1001 Nuggets - Some People</title>\r\n            </MetaTags>\r\n            <Card>\r\n                <Card.Header>Home {`>`} Some People</Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                         {/* First Quote Column */}\r\n                         {/* <Col xs={12} md={6} lg={4}>\r\n                            {list1 && \r\n                                <Row>\r\n                                    {list1.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {\r\n                                list3a &&\r\n                                <Row className=\"d-xs-block d-lg-none\">\r\n                                    {list3a.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={\"false\" + index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col> */}\r\n\r\n                        {/* Middle Quote Column */}\r\n                        {/* <Col lg={4} className=\"d-none d-lg-block\">\r\n                            {list3a && \r\n                                <Row>\r\n                                    {list3a.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {list3b && \r\n                                <Row>\r\n                                    {list3b.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col> */}\r\n                        \r\n                        {/* Last Quote Column */}\r\n                        {/* <Col xs={12} md={6} lg={4}>\r\n                            {\r\n                                list3b &&\r\n                                <Row className=\"d-xs-block d-lg-none\">\r\n                                    {list3b.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={\"false\" + index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                            {list2 && \r\n                                <Row>\r\n                                    {list2.map((index) => (\r\n                                        <Col xs={12} className=\"mb-3\" key={index.quoteText}>\r\n                                            <QuoteCard quotes={quoteList} quoteIndex={quoteList.indexOf(index)}/>\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            }\r\n                        </Col> */}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SomePeople;","C:\\Users\\thees\\Documents\\Programming_Backups\\React Stuff\\1001nuggets\\client\\src\\utils\\shuffle.js",["151"],"function shuffle(array) {\r\n    let currentIndex = array.length;\r\n    let randInt;\r\n\r\n    while(currentIndex != 0) {\r\n        randInt = Math.floor(Math.random() * currentIndex);\r\n        --currentIndex;\r\n\r\n        [array[currentIndex], array[randInt]] = [array[randInt], array[currentIndex]];\r\n    }\r\n    \r\n    return array;\r\n}\r\n\r\nexport default shuffle;",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"156"},{"ruleId":"154","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":34,"column":32,"nodeType":"160","messageId":"161","endLine":34,"endColumn":34},{"ruleId":"152","replacedBy":"162"},{"ruleId":"154","replacedBy":"163"},{"ruleId":"152","replacedBy":"164"},{"ruleId":"154","replacedBy":"165"},{"ruleId":"152","replacedBy":"166"},{"ruleId":"154","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"154","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":6,"column":26,"nodeType":"172","messageId":"173","endLine":6,"endColumn":29},{"ruleId":"170","severity":1,"message":"174","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":17},{"ruleId":"170","severity":1,"message":"175","line":19,"column":11,"nodeType":"172","messageId":"173","endLine":19,"endColumn":20},{"ruleId":"158","severity":1,"message":"176","line":5,"column":24,"nodeType":"160","messageId":"161","endLine":5,"endColumn":26},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],["177"],["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["177"],["178"],["177"],["178"],["177"],["178"],["177"],["178"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'QuoteCard' is defined but never used.","'quoteList' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]